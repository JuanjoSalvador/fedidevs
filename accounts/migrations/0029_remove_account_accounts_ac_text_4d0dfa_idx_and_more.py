# Generated by Django 5.1.3 on 2024-11-28 18:21

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.contrib.postgres.search import SearchVector
from django.db import migrations, models


def compute_search_vector(apps, _):
    Account = apps.get_model("accounts", "Account")
    Account.objects.update(
        search=SearchVector("username", "username_at_instance", weight="A")
        + SearchVector("instance", weight="B")
        + SearchVector("note", weight="D")
    )


def _get_username_at_instance(account):
    if account.instance_model:
        return f"@{account.username}@{account.instance_model.domain}"
    return f"@{account.username}@{account.url.replace('https://', '').split('/@')[0]}"


def populate_username_at_instance(apps, _):
    Account = apps.get_model("accounts", "Account")
    accounts = Account.objects.prefetch_related("instance_model").all()
    for account in accounts:
        account.username_at_instance = _get_username_at_instance(account)
    Account.objects.bulk_update(accounts, ["username_at_instance"], batch_size=250)


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0028_account_text_account_accounts_ac_text_4d0dfa_idx"),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name="account",
            name="accounts_ac_text_4d0dfa_idx",
        ),
        migrations.RemoveField(
            model_name="account",
            name="text",
        ),
        migrations.AddField(
            model_name="account",
            name="username_at_instance",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RunPython(populate_username_at_instance, migrations.RunPython.noop),
        migrations.AddField(
            model_name="account",
            name="search",
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name="account",
            index=django.contrib.postgres.indexes.GinIndex(fields=["search"], name="accounts_ac_search_eab982_gin"),
        ),
        migrations.RunPython(compute_search_vector, reverse_code=migrations.RunPython.noop),
    ]
