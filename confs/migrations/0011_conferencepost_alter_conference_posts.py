# Generated by Django 5.0.3 on 2024-03-11 17:51

import django.db.models.deletion
from django.db import migrations, models
from django.db.models import OuterRef, Subquery


def update(apps, _):
    Post = apps.get_model("posts", "Post")
    ConferencePost = apps.get_model("confs", "ConferencePost")
    ConferencePost.objects.update(
        created_at=Subquery(Post.objects.filter(id=OuterRef("post_id")).values("created_at")[:1]),
        favourites_count=Subquery(Post.objects.filter(id=OuterRef("post_id")).values("favourites_count")[:1]),
        reblogs_count=Subquery(Post.objects.filter(id=OuterRef("post_id")).values("reblogs_count")[:1]),
        replies_count=Subquery(Post.objects.filter(id=OuterRef("post_id")).values("replies_count")[:1]),
        visibility=Subquery(Post.objects.filter(id=OuterRef("post_id")).values("visibility")[:1]),
        account=Subquery(Post.objects.filter(id=OuterRef("post_id")).values("account")[:1]),
    )


class Migration(migrations.Migration):
    dependencies = [
        ("confs", "0010_conferenceaccount_alter_conference_accounts"),
        ("posts", "0005_postsubscription"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql="ALTER TABLE confs_conference_posts RENAME TO confs_conferencepost",
                    reverse_sql="ALTER TABLE confs_conferencepost RENAME TO confs_conference_posts",
                ),
            ],
            state_operations=[
                migrations.CreateModel(
                    name="ConferencePost",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                            ),
                        ),
                        (
                            "post",
                            models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posts.post"),
                        ),
                        (
                            "conference",
                            models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="confs.conference"),
                        ),
                    ],
                    options={
                        "unique_together": {("conference", "post")},
                    },
                ),
                migrations.AlterField(
                    model_name="conference",
                    name="posts",
                    field=models.ManyToManyField(blank=True, through="confs.ConferencePost", to="posts.post"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="conferencepost",
            name="created_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="conferencepost",
            name="favourites_count",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="conferencepost",
            name="reblogs_count",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="conferencepost",
            name="replies_count",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="conferencepost",
            name="visibility",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(fields=["conference", "created_at"], name="confs_confe_confere_59a67a_idx"),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(fields=["conference", "favourites_count"], name="confs_confe_confere_3c7fc2_idx"),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(fields=["conference", "reblogs_count"], name="confs_confe_confere_b7110a_idx"),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(fields=["conference", "replies_count"], name="confs_confe_confere_ba8de5_idx"),
        ),
        migrations.AddField(
            model_name="conferencepost",
            name="account",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="accounts.account"
            ),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(fields=["conference", "account", "created_at"], name="confs_confe_confere_fdbf3a_idx"),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(
                fields=["conference", "account", "favourites_count"], name="confs_confe_confere_95354b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(
                fields=["conference", "account", "reblogs_count"], name="confs_confe_confere_e0d10e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conferencepost",
            index=models.Index(
                fields=["conference", "account", "replies_count"], name="confs_confe_confere_1a1f64_idx"
            ),
        ),
        migrations.RunPython(
            code=update,
            reverse_code=lambda _, __: None,
        ),
    ]
